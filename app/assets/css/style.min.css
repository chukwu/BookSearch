/*!
 * bookshell
 * ..
 * 
 * @author Chukwu Ifeanyi
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}a{cursor:pointer}body,html{font-size:1rem;background-size:cover}body{font:300 13px/1.6 Lato;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}body hr,html hr{border:none;border-top:thin solid #da928c;margin-top:5px;margin-bottom:10px}img,svg{max-width:100%}svg#logo{width:100px}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.navbar-inverse{background-color:#3a3e3d;border-color:#3a3e3d;border-radius:0!important}.nav ul{list-style:none}.sidecontainer{width:100%;min-height:200px;background-color:#eee;padding:20px 25px}.sidecontainer h3{margin-top:0;font-size:1.1em}.sidecontainer ul{padding-left:0;list-style:none}.sidecontainer ul>li{padding:10px 20px;background-color:hsla(0,0%,100%,.78);margin-bottom:10px;position:relative;transition:all .5s linear;cursor:pointer}.sidecontainer li.active{font-weight:700;color:#da928c;font-size:1.1em}.sidecontainer li.active:before{width:3px;height:100%;background-color:#da928c;position:absolute;top:0;left:0;content:" "}.resultcolumn .btn{display:block;margin:0 auto;margin-top:30px;border-radius:0;text-transform:uppercase}.resultbox{margin-top:20px;position:relative}.resultbox h4{color:#da928c;text-transform:uppercase}.resultbox .column{position:relative;padding-top:15px;padding-bottom:15px;background-color:#f3f3f3;margin-bottom:20px}.resultbox .column p{margin-bottom:5px}.resultbox .column b{color:#333;font-weight:700}.resultbox img{display:block;margin:0 auto;margin-bottom:15px}.searchbox{width:100%;padding:17px 15px;background-color:#eee;position:relative}.searchbox .searchicon{width:25px;margin-right:10px}.searchbox .searchicon path{fill:#ccc;transition:all .5s linear}.searchbox form input{width:100%;border:none;border-radius:0;background-color:transparent;box-shadow:none!important;border-bottom:thin solid #ddd;padding:0 20px 0 0;font-size:1.7em;transition:all .5s linear}.searchbox form input:focus{border-color:#da928c}.searchbox form input:focus+.searchicon path{fill:#da928c}@keyframes a{0%,10%{transform:perspective(140px) rotateX(-180deg);opacity:0}25%,75%{transform:perspective(140px) rotateX(0deg);opacity:1}90%,to{transform:perspective(140px) rotateY(180deg);opacity:0}}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.sk-folding-cube{margin:20px auto;width:40px;height:40px;position:relative;transform:rotate(45deg)}.sk-folding-cube .sk-cube{float:left;width:50%;height:50%;position:relative;transform:scale(1.1)}.sk-folding-cube .sk-cube:before{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background-color:#333;animation:a 2.4s infinite linear both;transform-origin:100% 100%}.sk-folding-cube .sk-cube2{transform:scale(1.1) rotate(90deg)}.sk-folding-cube .sk-cube3{transform:scale(1.1) rotate(180deg)}.sk-folding-cube .sk-cube4{transform:scale(1.1) rotate(270deg)}.sk-folding-cube .sk-cube2:before{animation-delay:.3s}.sk-folding-cube .sk-cube3:before{animation-delay:.6s}.sk-folding-cube .sk-cube4:before{animation-delay:.9s}.Absolute-Center{margin:auto;position:absolute;top:0;left:0;bottom:0;right:0}.loader{width:90px;height:81px;z-index:1;display:none;background-color:#ddd}.loadarea{background:#fff;width:100%;min-height:400px}.navbar-inverse .navbar-collapse{padding-left:0;text-transform:uppercase}.navbar-inverse .navbar-nav>.active>a,.navbar-inverse .navbar-nav>.active>a:focus,.navbar-inverse .navbar-nav>.active>a:hover{background-color:#4c4c4c!important}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
